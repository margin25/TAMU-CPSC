//Mualla Argin 728003004

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */
 
// Create the RAM 512 using RAM64 (builtin) Modules

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    RAM64(in=in,load=a,address=address[0..5],out=starta); # of address ports = log_2(64) = 6
    RAM64(in=in,load=b,address=address[0..5],out=startb);
    RAM64(in=in,load=c,address=address[0..5],out=startc);
    RAM64(in=in,load=d,address=address[0..5],out=startd);
    RAM64(in=in,load=e,address=address[0..5],out=starte);
    RAM64(in=in,load=f,address=address[0..5],out=startf);
    RAM64(in=in,load=g,address=address[0..5],out=startg);
    RAM64(in=in,load=h,address=address[0..5],out=starth);
    DMux8Way(in=load,sel=address[6..8],a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h); // rest of address ports go to Dmux and mx8way16
    Mux8Way16(a=starta,b=startb,c=startc,d=startd,e=starte,f=startf,g=startg,h=starth,sel=address[6..8],out=out);
}