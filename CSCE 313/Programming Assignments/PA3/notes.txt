Client:
    - need to join() threads after making them

Data Transfers:
    - create p-threads to produce datamsgs (w/ecg1)
    - create w FIFOs for workers to use
    - create w-threads to consume and process datamsgs
        -> worker threads produce results 
    - create h-threads to consume results and populate HG (w/update(...))

Histogram uses mutex to avoid race conditions

File Transfer:
    - collect file size 
    - create a thread to produce filemsgs
    - create wthreads to consume and process filemsgs
        -> use fseek (w/ SEEK_SET) to write to file (open mode important)

Bounded Buffer:
    - STL queue with objects vector <char>
    - use a mutex and cond var
        -> mutex is wrapped in unique_lock
    - push waits on size < cap; notify pop that data available 
    - pop waits on size > 0; notify push that slot available
